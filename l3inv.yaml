substitutions:
  name: l3inv-test
  loop_interval: 500ms
  update_interval: 1000ms

esphome:
  name: ${name}
  friendly_name: L3 Inverter

esp32:
  board: nodemcu-32s
  # board: esp8285
  # framework:
  #   version: "2.4.2"

external_components:
  - source:
      type: local
      path: components      
  # - source:
  #     type: git
  #     url: https://github.com/maquowicz/esphome-pipsolar.git
  #     ref: pi18
  #   components: [pipsolar]
  #   refresh: 3000s

# Enable logging
logger:
  level: DEBUG
  #level: INFO
  baud_rate: 0 # disable UART logs
  logs:
    component: ERROR

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  password: !secret ota_password

wifi:
  # fast_connect: true
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # use_address: 192.168.0.109 # override for ota if hostname changes

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${name} Hotspot"
    password: !secret wifi_fallback_password

captive_portal:

# time:
#   - platform: homeassistant
#     id: hass_time

uart:

  # - id: uart_ch1
  #   rx_pin: GPIO16 # ST232 R1.out (12) > GPIO16
  #   tx_pin: GPIO17 # ST232 T1.in (11) > GPIO17
  #   baud_rate: 2400

  - id: uart_ch2
    rx_pin: GPIO18
    tx_pin: GPIO19
    baud_rate: 9600    
    # debug: # this wipes out uart read buffer 
    #  direction: BOTH
    #  #dummy_receiver: true
    #  after:
    #    delimiter: "\r"
    #  sequence:
    #    - lambda: UARTDebug::log_string(direction, bytes);

# pipsolar:
#   - uart_id: uart_ch1
#     id: inverter0
#     update_interval: ${loop_interval}

# <<: !include l3inv-pipsolar.yaml

jbd_bms:
  - id: bms0
    uart_id: uart_ch2
    update_interval: 2s
    rx_timeout: 150ms
    modbus_id: 0

<<: !include l3inv-jbdbms.yaml
